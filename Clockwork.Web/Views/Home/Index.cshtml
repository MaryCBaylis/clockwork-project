<script>

    $("document").ready(function(){
        $("#about").tooltip({"trigger": "click"});
    
        setClock();
        setTable();
    })

    function setClock() {
        AnalogClock.init();
        var time = new Date();
        AnalogClock.draw(time);
    }

    function setTable() {
        requestPreviousRequestData();
        $("body").on("click", ".page-request", function(){
            var requestedPage = $(this).data("pageRequest");
            var table = TableMaker.make(requestedPage);
            $("#output").html(table);
        })
    }
        
    function UserAction() {
    $("#getTimeButton").button("loading");
        requestCurrentTime();
        requestPreviousRequestData();
    }

    function requestCurrentTime(){
        urlString = "http://127.0.0.1:5000/api/currenttime";
        successFunction = function(response) {
                var time = parseTimeFromResponse(response);
                AnalogClock.draw(new Date(time));
        }
        sendGetRequest(urlString, successFunction);
    }

    function requestPreviousRequestData() {
        urlString = "http://127.0.0.1:5000/api/currentTime/requests";
        successFunction = function(response) {
            var headers = {
                "currentTimeQueryId": "Id",
                "time": "Time",
                "clientIp": "Client IP",
                "utcTime": "UTC Time"
            }
            TableMaker.init(JSON.parse(response).reverse(), headers, 20);
            var table = TableMaker.make();
            $("#output").html(table);
        }
        sendGetRequest(urlString, successFunction);
    }

    function sendGetRequest(url, callback) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                callback(this.responseText);
            }
        };
        xhttp.open("GET", url, true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send();
    }

    function parseTimeFromResponse(response) {
        var time = JSON.parse(response).time;
        var date = new Date(Date.parse(time, "yyyy-MM-dd HH:mm z"));
        return date;
    }
    
</script>
<div class="row">
    <div class="spaceholder col-lg-2 col-md-1">
    </div>
    <div class="header row col-lg-8 col-md-10">
        <h1>AWH 
            <span class="secondary-header">Clockwork Project</span>
        </h1>
        <span id="about" data-toggle="tooltip" data-placement="bottom" 
            title="Version @ViewData["Version"] on @ViewData["Runtime"]!">
  <i class="fas fa-question-circle tertiary-header"></i></span> 
    </div>
    <div class="spaceholder col-lg-2 col-md-1">
    </div>
</div>
<div class="row">
    <div class="spaceholder col-lg-2 col-md-1">
    </div>
    <div class="jumbotron col-lg-8 col-md-10">
        <canvas id="canvas" width="400" height="400">
        </canvas>
        <button class="btn btn-lg col-md-8" id="getTimeButton" type="submit" 
        onclick="UserAction()">Get the Time</button>
    </div>
    <div class="spaceholder col-lg-2 col-md-1">
    </div>
</div>
<div class="row">
    <div class="spaceholder col-lg-2 col-md-1">
    </div>
    <div class="col-lg-8 col-md-10 no-padding">
    @{
        Html.RenderPartial("_PreviousRequestsTable");
    }
    </div>
    <div class="spaceholder col-lg-2 col-md-1">
    </div>
</div>


@section head {
    <link href="Content/index.css" rel="stylesheet">
    <script src="Scripts/analogClock.js"></script>
    <script src="Scripts/tableMaker.js"></script>
}
